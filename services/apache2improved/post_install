#!/bin/bash

postInstall removeSystemVstyleInitScriptlinks $SVCNAME

if [ $os == "Ubuntu" ]
then
    if [ $? -ne 0 ]
    then
            echo "Failed removing $SVCNAME from service"
            exit 1
    fi
    
    # Remove Indexes option from config files
    perl ${root_dir}/conf/update_conf.pl /etc/$SVCNAME/sites-available/000-default.conf $os
    if [ $? -ne 0 ]
    then
            echo "Failed updating config file"
            exit 1
    fi
    perl ${root_dir}/conf/update_conf.pl /etc/$SVCNAME/sites-available/default-ssl.conf
    if [ $? -ne 0 ]
    then
            echo "Failed updating config file"
            exit 1
    fi
    
    echo "Update packages ..."
    packageUpdate

    echo "Remove libmysqlclient18 and libmysqlclient18:i386 ..."
    apt-get -y  purge libmysqlclient18 libmysqlclient18:i386
    echo "Removed. Continue with installation ..."


    echo "Installing php modules ..."
   # serviceInstall "php5 libapache2-mod-auth-mysql php5-mysql perl libapache2-mod-perl2 python libapache2-mod-python php5-gd php-pear php5-curl libgd2-xpm"
    serviceInstall "php7.0 php7.0-mysql php7.0-xml  perl python  libapache2-mod-python php7.0-curl php7.0-dev libapache2-mod-perl2 libgd-dev"
    if [ $? -ne 0 ]
    then
        echo "Php install failed"
    fi
    
    /etc/init.d/$SVCNAME stop

    if [ -d /var/lock/$SVCNAME ]
    then
            echo "Removing $SVCNAME lock file"
            rm -fr /var/lock/$SVCNAME
    fi
    
    #specifically handle mongoDB use case -- when the associated DB is mongoDB. No harm if any other DB is used.
    apt-get -y install autoconf g++ make openssl libssl-dev libcurl4-openssl-dev pkg-config libsasl2-dev libpcre3-dev
    if [ $? -ne 0 ]
    then
        echo "Failed to install mongoDB PHP driver. Need to install the Mongo extension for PHP."
    fi
    echo no | pecl install mongodb
    #echo "extension=mongo.so" >> /etc/php5/apache2/php.ini
    echo "extension=mongo.so" >> /etc/php/7.0/apache2/php.ini
    
elif ([ $os == "CentOS" ] || [ $os == "RHEL" ])
then   
    echo "Installing php modules"
    packageUpdate
    serviceInstall "php php-mysql php-devel php-gd php-pecl-memcache php-pspell php-snmp php-xmlrpc php-xml"
    if [ $? -ne 0 ]
    then
        echo "Php install failed"
    fi
     
    if [ -d /var/lock/subsys/$SVCNAME ]
    then
            echo "Removing $SVCNAME lock file"
            rm -fr  /var/lock/subsys/$SVCNAME
    fi
    
    /etc/init.d/$SVCNAME stop
    
    cd /etc/httpd/
    echo "Adding directories sites-available and sites-enabled"
    mkdir sites-available sites-enabled
    echo  "Include sites-enabled/" >> conf/httpd.conf 
    echo "Setting the document root to /var/www"    
    replaceToken conf/httpd.conf \/var\/www\/html \/var\/www
    
    cp $SVCHOME/etc/sites-available/default /etc/$SVCNAME/sites-available
    replaceToken /etc/$SVCNAME/sites-available/default "%SVCNAME%" $SVCNAME
    chmod 0644 /etc/$SVCNAME/sites-available/default

    
    echo "Adding scripts a2ensite and a2dissite" 
    cp $SVCHOME/etc/a2ensite /usr/sbin
    cp $SVCHOME/etc/a2dissite /usr/sbin
    chmod +x /usr/sbin/a2*
 
    /usr/sbin/a2ensite default
    if [ $? -ne 0 ]; then
        log "Error while enabling default"
        exit $?
    fi
    
    #specifically handle mongoDB use case -- when the associated DB is mongoDB. No harm if any other DB is used.
    yum -y install php-pear gcc
    echo no | pecl install mongo
    echo "extension=mongo.so" >> /etc/php.ini
    
fi

